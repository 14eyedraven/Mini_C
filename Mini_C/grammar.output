Grammar

    0 $accept: compileUnit $end

    1 compileUnit: statement
    2            | compileUnit statement
    3            | function_definition
    4            | compileUnit function_definition

    5 function_definition: FUNCTION IDENTIFIER '(' formal_args ')' compound_statement
    6                    | FUNCTION IDENTIFIER '(' ')' compound_statement

    7 formal_args: IDENTIFIER
    8            | formal_args ',' IDENTIFIER

    9 compound_statement: '{' '}'
   10                   | '{' statements '}'

   11 statements: statement
   12           | statements statement

   13 statement: expression ';'
   14          | if_statement
   15          | while_statement
   16          | BREAK ';'
   17          | CONTINUE ';'
   18          | RETURN expression ';'
   19          | ';'

   20 if_statement: IF '(' expression ')' statement
   21             | IF '(' expression ')' statement ELSE statement

   22 while_statement: WHILE '(' expression ')' compound_statement
   23                | WHILE '(' expression ')' statement

   24 expression: NUMBER
   25           | IDENTIFIER
   26           | IDENTIFIER '=' expression
   27           | IDENTIFIER '(' ')'
   28           | IDENTIFIER '(' actual_args ')'
   29           | expression '+' expression
   30           | expression '-' expression
   31           | expression '*' expression
   32           | expression '/' expression
   33           | '(' expression ')'
   34           | expression L expression
   35           | expression G expression
   36           | expression LE expression
   37           | expression GE expression
   38           | expression EQ expression
   39           | expression NE expression
   40           | expression AND expression
   41           | expression OR expression
   42           | NOT expression

   43 actual_args: expression
   44            | actual_args ',' expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 5 6 20 21 22 23 27 28 33
')' (41) 5 6 20 21 22 23 27 28 33
'*' (42) 31
'+' (43) 29
',' (44) 8 44
'-' (45) 30
'/' (47) 32
';' (59) 13 16 17 18 19
'=' (61) 26
'{' (123) 9 10
'}' (125) 9 10
error (256)
NUMBER (258) 24
IDENTIFIER (259) 5 6 7 8 25 26 27 28
IF (260) 20 21
ELSE (261) 21
WHILE (262) 22 23
FUNCTION (263) 5 6
BREAK (264) 16
CONTINUE (265) 17
RETURN (266) 18
PARTIALIFRULE (267)
OR (268) 41
AND (269) 40
NE (270) 39
EQ (271) 38
GE (272) 37
LE (273) 36
G (274) 35
L (275) 34
NOT (276) 42


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
compileUnit (34)
    on left: 1 2 3 4, on right: 0 2 4
function_definition (35)
    on left: 5 6, on right: 3 4
formal_args (36)
    on left: 7 8, on right: 5 8
compound_statement (37)
    on left: 9 10, on right: 5 6 22
statements (38)
    on left: 11 12, on right: 10 12
statement (39)
    on left: 13 14 15 16 17 18 19, on right: 1 2 11 12 20 21 23
if_statement (40)
    on left: 20 21, on right: 14
while_statement (41)
    on left: 22 23, on right: 15
expression (42)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
    42, on right: 13 18 20 21 22 23 26 29 30 31 32 33 34 35 36 37 38
    39 40 41 42 43 44
actual_args (43)
    on left: 43 44, on right: 28 44


State 0

    0 $accept: . compileUnit $end

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    IF          shift, and go to state 3
    WHILE       shift, and go to state 4
    FUNCTION    shift, and go to state 5
    BREAK       shift, and go to state 6
    CONTINUE    shift, and go to state 7
    RETURN      shift, and go to state 8
    NOT         shift, and go to state 9
    '('         shift, and go to state 10
    ';'         shift, and go to state 11

    compileUnit          go to state 12
    function_definition  go to state 13
    statement            go to state 14
    if_statement         go to state 15
    while_statement      go to state 16
    expression           go to state 17


State 1

   24 expression: NUMBER .

    $default  reduce using rule 24 (expression)


State 2

   25 expression: IDENTIFIER .
   26           | IDENTIFIER . '=' expression
   27           | IDENTIFIER . '(' ')'
   28           | IDENTIFIER . '(' actual_args ')'

    '='  shift, and go to state 18
    '('  shift, and go to state 19

    $default  reduce using rule 25 (expression)


State 3

   20 if_statement: IF . '(' expression ')' statement
   21             | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 20


State 4

   22 while_statement: WHILE . '(' expression ')' compound_statement
   23                | WHILE . '(' expression ')' statement

    '('  shift, and go to state 21


State 5

    5 function_definition: FUNCTION . IDENTIFIER '(' formal_args ')' compound_statement
    6                    | FUNCTION . IDENTIFIER '(' ')' compound_statement

    IDENTIFIER  shift, and go to state 22


State 6

   16 statement: BREAK . ';'

    ';'  shift, and go to state 23


State 7

   17 statement: CONTINUE . ';'

    ';'  shift, and go to state 24


State 8

   18 statement: RETURN . expression ';'

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 25


State 9

   42 expression: NOT . expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 26


State 10

   33 expression: '(' . expression ')'

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 27


State 11

   19 statement: ';' .

    $default  reduce using rule 19 (statement)


State 12

    0 $accept: compileUnit . $end
    2 compileUnit: compileUnit . statement
    4            | compileUnit . function_definition

    $end        shift, and go to state 28
    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    IF          shift, and go to state 3
    WHILE       shift, and go to state 4
    FUNCTION    shift, and go to state 5
    BREAK       shift, and go to state 6
    CONTINUE    shift, and go to state 7
    RETURN      shift, and go to state 8
    NOT         shift, and go to state 9
    '('         shift, and go to state 10
    ';'         shift, and go to state 11

    function_definition  go to state 29
    statement            go to state 30
    if_statement         go to state 15
    while_statement      go to state 16
    expression           go to state 17


State 13

    3 compileUnit: function_definition .

    $default  reduce using rule 3 (compileUnit)


State 14

    1 compileUnit: statement .

    $default  reduce using rule 1 (compileUnit)


State 15

   14 statement: if_statement .

    $default  reduce using rule 14 (statement)


State 16

   15 statement: while_statement .

    $default  reduce using rule 15 (statement)


State 17

   13 statement: expression . ';'
   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression

    OR   shift, and go to state 31
    AND  shift, and go to state 32
    NE   shift, and go to state 33
    EQ   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    G    shift, and go to state 37
    L    shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ';'  shift, and go to state 43


State 18

   26 expression: IDENTIFIER '=' . expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 44


State 19

   27 expression: IDENTIFIER '(' . ')'
   28           | IDENTIFIER '(' . actual_args ')'

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10
    ')'         shift, and go to state 45

    expression   go to state 46
    actual_args  go to state 47


State 20

   20 if_statement: IF '(' . expression ')' statement
   21             | IF '(' . expression ')' statement ELSE statement

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 48


State 21

   22 while_statement: WHILE '(' . expression ')' compound_statement
   23                | WHILE '(' . expression ')' statement

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 49


State 22

    5 function_definition: FUNCTION IDENTIFIER . '(' formal_args ')' compound_statement
    6                    | FUNCTION IDENTIFIER . '(' ')' compound_statement

    '('  shift, and go to state 50


State 23

   16 statement: BREAK ';' .

    $default  reduce using rule 16 (statement)


State 24

   17 statement: CONTINUE ';' .

    $default  reduce using rule 17 (statement)


State 25

   18 statement: RETURN expression . ';'
   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression

    OR   shift, and go to state 31
    AND  shift, and go to state 32
    NE   shift, and go to state 33
    EQ   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    G    shift, and go to state 37
    L    shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ';'  shift, and go to state 51


State 26

   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression
   42           | NOT expression .

    $default  reduce using rule 42 (expression)


State 27

   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   33           | '(' expression . ')'
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression

    OR   shift, and go to state 31
    AND  shift, and go to state 32
    NE   shift, and go to state 33
    EQ   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    G    shift, and go to state 37
    L    shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ')'  shift, and go to state 52


State 28

    0 $accept: compileUnit $end .

    $default  accept


State 29

    4 compileUnit: compileUnit function_definition .

    $default  reduce using rule 4 (compileUnit)


State 30

    2 compileUnit: compileUnit statement .

    $default  reduce using rule 2 (compileUnit)


State 31

   41 expression: expression OR . expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 53


State 32

   40 expression: expression AND . expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 54


State 33

   39 expression: expression NE . expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 55


State 34

   38 expression: expression EQ . expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 56


State 35

   37 expression: expression GE . expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 57


State 36

   36 expression: expression LE . expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 58


State 37

   35 expression: expression G . expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 59


State 38

   34 expression: expression L . expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 60


State 39

   29 expression: expression '+' . expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 61


State 40

   30 expression: expression '-' . expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 62


State 41

   31 expression: expression '*' . expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 63


State 42

   32 expression: expression '/' . expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 64


State 43

   13 statement: expression ';' .

    $default  reduce using rule 13 (statement)


State 44

   26 expression: IDENTIFIER '=' expression .
   29           | expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression

    OR   shift, and go to state 31
    AND  shift, and go to state 32
    NE   shift, and go to state 33
    EQ   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    G    shift, and go to state 37
    L    shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 26 (expression)


State 45

   27 expression: IDENTIFIER '(' ')' .

    $default  reduce using rule 27 (expression)


State 46

   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression
   43 actual_args: expression .

    OR   shift, and go to state 31
    AND  shift, and go to state 32
    NE   shift, and go to state 33
    EQ   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    G    shift, and go to state 37
    L    shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 43 (actual_args)


State 47

   28 expression: IDENTIFIER '(' actual_args . ')'
   44 actual_args: actual_args . ',' expression

    ')'  shift, and go to state 65
    ','  shift, and go to state 66


State 48

   20 if_statement: IF '(' expression . ')' statement
   21             | IF '(' expression . ')' statement ELSE statement
   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression

    OR   shift, and go to state 31
    AND  shift, and go to state 32
    NE   shift, and go to state 33
    EQ   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    G    shift, and go to state 37
    L    shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ')'  shift, and go to state 67


State 49

   22 while_statement: WHILE '(' expression . ')' compound_statement
   23                | WHILE '(' expression . ')' statement
   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression

    OR   shift, and go to state 31
    AND  shift, and go to state 32
    NE   shift, and go to state 33
    EQ   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    G    shift, and go to state 37
    L    shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    ')'  shift, and go to state 68


State 50

    5 function_definition: FUNCTION IDENTIFIER '(' . formal_args ')' compound_statement
    6                    | FUNCTION IDENTIFIER '(' . ')' compound_statement

    IDENTIFIER  shift, and go to state 69
    ')'         shift, and go to state 70

    formal_args  go to state 71


State 51

   18 statement: RETURN expression ';' .

    $default  reduce using rule 18 (statement)


State 52

   33 expression: '(' expression ')' .

    $default  reduce using rule 33 (expression)


State 53

   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression
   41           | expression OR expression .

    AND  shift, and go to state 32
    NE   shift, and go to state 33
    EQ   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    G    shift, and go to state 37
    L    shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 41 (expression)


State 54

   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   40           | expression AND expression .
   41           | expression . OR expression

    NE   shift, and go to state 33
    EQ   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    G    shift, and go to state 37
    L    shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 40 (expression)


State 55

   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   39           | expression NE expression .
   40           | expression . AND expression
   41           | expression . OR expression

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    NE  error (nonassociative)
    EQ  error (nonassociative)
    GE  error (nonassociative)
    LE  error (nonassociative)
    G   error (nonassociative)
    L   error (nonassociative)

    $default  reduce using rule 39 (expression)


State 56

   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   38           | expression EQ expression .
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    NE  error (nonassociative)
    EQ  error (nonassociative)
    GE  error (nonassociative)
    LE  error (nonassociative)
    G   error (nonassociative)
    L   error (nonassociative)

    $default  reduce using rule 38 (expression)


State 57

   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   37           | expression GE expression .
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    NE  error (nonassociative)
    EQ  error (nonassociative)
    GE  error (nonassociative)
    LE  error (nonassociative)
    G   error (nonassociative)
    L   error (nonassociative)

    $default  reduce using rule 37 (expression)


State 58

   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   36           | expression LE expression .
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    NE  error (nonassociative)
    EQ  error (nonassociative)
    GE  error (nonassociative)
    LE  error (nonassociative)
    G   error (nonassociative)
    L   error (nonassociative)

    $default  reduce using rule 36 (expression)


State 59

   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   35           | expression G expression .
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    NE  error (nonassociative)
    EQ  error (nonassociative)
    GE  error (nonassociative)
    LE  error (nonassociative)
    G   error (nonassociative)
    L   error (nonassociative)

    $default  reduce using rule 35 (expression)


State 60

   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   34           | expression L expression .
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    NE  error (nonassociative)
    EQ  error (nonassociative)
    GE  error (nonassociative)
    LE  error (nonassociative)
    G   error (nonassociative)
    L   error (nonassociative)

    $default  reduce using rule 34 (expression)


State 61

   29 expression: expression . '+' expression
   29           | expression '+' expression .
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 29 (expression)


State 62

   29 expression: expression . '+' expression
   30           | expression . '-' expression
   30           | expression '-' expression .
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 30 (expression)


State 63

   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   31           | expression '*' expression .
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression

    $default  reduce using rule 31 (expression)


State 64

   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   32           | expression '/' expression .
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression

    $default  reduce using rule 32 (expression)


State 65

   28 expression: IDENTIFIER '(' actual_args ')' .

    $default  reduce using rule 28 (expression)


State 66

   44 actual_args: actual_args ',' . expression

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    NOT         shift, and go to state 9
    '('         shift, and go to state 10

    expression  go to state 72


State 67

   20 if_statement: IF '(' expression ')' . statement
   21             | IF '(' expression ')' . statement ELSE statement

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    IF          shift, and go to state 3
    WHILE       shift, and go to state 4
    BREAK       shift, and go to state 6
    CONTINUE    shift, and go to state 7
    RETURN      shift, and go to state 8
    NOT         shift, and go to state 9
    '('         shift, and go to state 10
    ';'         shift, and go to state 11

    statement        go to state 73
    if_statement     go to state 15
    while_statement  go to state 16
    expression       go to state 17


State 68

   22 while_statement: WHILE '(' expression ')' . compound_statement
   23                | WHILE '(' expression ')' . statement

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    IF          shift, and go to state 3
    WHILE       shift, and go to state 4
    BREAK       shift, and go to state 6
    CONTINUE    shift, and go to state 7
    RETURN      shift, and go to state 8
    NOT         shift, and go to state 9
    '('         shift, and go to state 10
    '{'         shift, and go to state 74
    ';'         shift, and go to state 11

    compound_statement  go to state 75
    statement           go to state 76
    if_statement        go to state 15
    while_statement     go to state 16
    expression          go to state 17


State 69

    7 formal_args: IDENTIFIER .

    $default  reduce using rule 7 (formal_args)


State 70

    6 function_definition: FUNCTION IDENTIFIER '(' ')' . compound_statement

    '{'  shift, and go to state 74

    compound_statement  go to state 77


State 71

    5 function_definition: FUNCTION IDENTIFIER '(' formal_args . ')' compound_statement
    8 formal_args: formal_args . ',' IDENTIFIER

    ')'  shift, and go to state 78
    ','  shift, and go to state 79


State 72

   29 expression: expression . '+' expression
   30           | expression . '-' expression
   31           | expression . '*' expression
   32           | expression . '/' expression
   34           | expression . L expression
   35           | expression . G expression
   36           | expression . LE expression
   37           | expression . GE expression
   38           | expression . EQ expression
   39           | expression . NE expression
   40           | expression . AND expression
   41           | expression . OR expression
   44 actual_args: actual_args ',' expression .

    OR   shift, and go to state 31
    AND  shift, and go to state 32
    NE   shift, and go to state 33
    EQ   shift, and go to state 34
    GE   shift, and go to state 35
    LE   shift, and go to state 36
    G    shift, and go to state 37
    L    shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 44 (actual_args)


State 73

   20 if_statement: IF '(' expression ')' statement .
   21             | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 80

    $default  reduce using rule 20 (if_statement)


State 74

    9 compound_statement: '{' . '}'
   10                   | '{' . statements '}'

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    IF          shift, and go to state 3
    WHILE       shift, and go to state 4
    BREAK       shift, and go to state 6
    CONTINUE    shift, and go to state 7
    RETURN      shift, and go to state 8
    NOT         shift, and go to state 9
    '('         shift, and go to state 10
    '}'         shift, and go to state 81
    ';'         shift, and go to state 11

    statements       go to state 82
    statement        go to state 83
    if_statement     go to state 15
    while_statement  go to state 16
    expression       go to state 17


State 75

   22 while_statement: WHILE '(' expression ')' compound_statement .

    $default  reduce using rule 22 (while_statement)


State 76

   23 while_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 23 (while_statement)


State 77

    6 function_definition: FUNCTION IDENTIFIER '(' ')' compound_statement .

    $default  reduce using rule 6 (function_definition)


State 78

    5 function_definition: FUNCTION IDENTIFIER '(' formal_args ')' . compound_statement

    '{'  shift, and go to state 74

    compound_statement  go to state 84


State 79

    8 formal_args: formal_args ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 85


State 80

   21 if_statement: IF '(' expression ')' statement ELSE . statement

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    IF          shift, and go to state 3
    WHILE       shift, and go to state 4
    BREAK       shift, and go to state 6
    CONTINUE    shift, and go to state 7
    RETURN      shift, and go to state 8
    NOT         shift, and go to state 9
    '('         shift, and go to state 10
    ';'         shift, and go to state 11

    statement        go to state 86
    if_statement     go to state 15
    while_statement  go to state 16
    expression       go to state 17


State 81

    9 compound_statement: '{' '}' .

    $default  reduce using rule 9 (compound_statement)


State 82

   10 compound_statement: '{' statements . '}'
   12 statements: statements . statement

    NUMBER      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    IF          shift, and go to state 3
    WHILE       shift, and go to state 4
    BREAK       shift, and go to state 6
    CONTINUE    shift, and go to state 7
    RETURN      shift, and go to state 8
    NOT         shift, and go to state 9
    '('         shift, and go to state 10
    '}'         shift, and go to state 87
    ';'         shift, and go to state 11

    statement        go to state 88
    if_statement     go to state 15
    while_statement  go to state 16
    expression       go to state 17


State 83

   11 statements: statement .

    $default  reduce using rule 11 (statements)


State 84

    5 function_definition: FUNCTION IDENTIFIER '(' formal_args ')' compound_statement .

    $default  reduce using rule 5 (function_definition)


State 85

    8 formal_args: formal_args ',' IDENTIFIER .

    $default  reduce using rule 8 (formal_args)


State 86

   21 if_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 21 (if_statement)


State 87

   10 compound_statement: '{' statements '}' .

    $default  reduce using rule 10 (compound_statement)


State 88

   12 statements: statements statement .

    $default  reduce using rule 12 (statements)
